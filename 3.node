镜像
如果你的节点上面有科学上网的工具，可以忽略这一步，我们需要提前将所需的gcr.io上面的镜像下载到节点上面，当然前提条件是你已经成功安装了`docker。master节点，执行下面的命令：


cat <<EOF > node_docker.sh
docker pull coll/kube-proxy:v1.12.1
docker pull coll/flannel:v0.10.0-amd64
docker pull coll/pause:3.1

docker tag coll/kube-proxy:v1.12.1 k8s.gcr.io/kube-proxy:v1.12.1
docker tag coll/flannel:v0.10.0-amd64 quay.io/coreos/flannel:v0.10.0-amd64
docker tag coll/pause:3.1 k8s.gcr.io/pause:3.1
EOF

$ chmod +x node_docker.sh &&  bash -x node_docker.sh

添加节点
同样的上面的环境配置、docker 安装、kubeadmin、kubelet、kubectl 这些都在Node(10.151.30.62)节点安装配置好过后，我们就可以直接在 Node 节点上执行kubeadm join命令了（上面初始化的时候有），同样加上参数--ignore-preflight-errors=Swap:



cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg
        http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF

直接安装最新版(指定版本kubelet-1.12.1-0 kubeadm-1.12.1-0 kubectl-1.12.1-0)

$ yum makecache fast && yum install -y kubelet kubeadm kubectl
$ systemctl enable kubelet.service

  kubeadm join 192.168.160.129:6443 --token 4hgh1s.2o3k2e7hd7xt1mku --discovery-token-ca-cert-hash sha256:17ee6588bb37a95ddb7978c04e59670779a5fd6f61896bb24fa75d848f9c2f3a


如何从集群中移除Node
如果需要从集群中移除node2这个Node执行下面的命令：

在master节点上执行：

kubectl drain node2 --delete-local-data --force --ignore-daemonsets
kubectl delete node node2


2.7 kube-proxy开启ipvs
修改ConfigMap的kube-system/kube-proxy中的config.conf，mode: "ipvs"：

kubectl edit cm kube-proxy -n kube-system
之后重启各个节点上的kube-proxy pod：

kubectl get pod -n kube-system | grep kube-proxy | awk '{system("kubectl delete pod "$1" -n kube-system")}'

kubectl get pod -n kube-system | grep kube-proxy